services:
  db:
    image: postgres
    hostname: db
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=${MATCHES_DB_USER}
      - POSTGRES_PASSWORD=${MATCHES_DB_PASSWORD}

    ports:
      - '5433:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
  
  consumer-app-1:
    image: consumer-app
    hostname: consumer-app-1
    container_name: consumer-app-1
    restart: always
    environment:
      - SERVER_PORT=8081
      - PG_MATCHES_DB_CONNECTION_URL=jdbc:postgresql://db:5432/matches_db
      - PG_PASSWORD=match_password
      - PG_USERNAME=match_admin
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_HOST=haproxy
      - REDIS_HOST=redis-server
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_started
#      haproxy:
#       condition: service_healthy

  consumer-app-2:
    image: consumer-app
    hostname: consumer-app-2
    container_name: consumer-app-2
    restart: always
    environment:
      - SERVER_PORT=8082
      - PG_MATCHES_DB_CONNECTION_URL=jdbc:postgresql://db:5432/matches_db
      - PG_PASSWORD=match_password
      - PG_USERNAME=match_admin
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_HOST=haproxy
      - REDIS_HOST=redis-server
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_started
#      haproxy:
#       condition: service_healthy

  rabbitmq1:
    image: rabbitmq:4-management
    hostname: rabbitmq1
    container_name: rabbitmq1
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    volumes:
      - ./security/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
      - D:/rabbit_data/data1:/var/lib/rabbitmq
    entrypoint: /usr/local/bin/cluster-entrypoint.sh

  rabbitmq2:
    image: rabbitmq:4-management
    hostname: rabbitmq2
    container_name: rabbitmq2
    restart: always
    depends_on:
      - rabbitmq1
    environment:
      - JOIN_CLUSTER_HOST=rabbitmq1
    volumes:
      - ./security/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
      - D:/rabbit_data/data2:/var/lib/rabbitmq
    entrypoint: /usr/local/bin/cluster-entrypoint.sh

  rabbitmq3:
    image: rabbitmq:4-management
    hostname: rabbitmq3
    container_name: rabbitmq3
    restart: always
    depends_on:
      - rabbitmq1
    environment:
      - JOIN_CLUSTER_HOST=rabbitmq1
    volumes:
      - ./security/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./cluster-entrypoint.sh:/usr/local/bin/cluster-entrypoint.sh
      - D:/rabbit_data/data3:/var/lib/rabbitmq
    entrypoint: /usr/local/bin/cluster-entrypoint.sh

  haproxy:
    image: haproxy:3.0
    hostname: haproxy
    container_name: haproxy
    restart: always
#    healthcheck:
#      test: ["CMD", "ls"]
#      interval: 20s
#      timeout: 10s
#      start_period: 20s
#      retries: 3  
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - rabbitmq1
      - rabbitmq2
      - rabbitmq3
      - consumer-app-1
      - consumer-app-2
    ports:
      - 8080:8080
      - 15672:15672
      - 5672:5672
      - 1936:1936
     
  redis:
    image: redis:8.0-M02-alpine3.20
    restart: always
    hostname: redis-server
    container_name: redis-server
    ports:
    - "63079:6379"

volumes:
  pgdata: